use postgres::row::Row;
use postgres::types::{ToSql, FromSql};

#[derive(Debug, ToSql, FromSql)]
pub struct directus_settings {
    pub id: i32,
    pub project_name: String,
    pub project_url: Option<String>,
    pub project_color: String,
    pub project_logo: Option<Uuid>,
    pub public_foreground: Option<Uuid>,
    pub public_background: Option<Uuid>,
    pub public_note: Option<String>,
    pub auth_login_attempts: Option<i32>,
    pub auth_password_policy: Option<String>,
    pub storage_asset_transform: Option<String>,
    pub storage_asset_presets: Option<Json>,
    pub custom_css: Option<String>,
    pub storage_default_folder: Option<Uuid>,
    pub basemaps: Option<Json>,
    pub mapbox_key: Option<String>,
    pub module_bar: Option<Json>,
    pub project_descriptor: Option<String>,
    pub default_language: String,
    pub custom_aspect_ratios: Option<Json>,
    pub public_favicon: Option<Uuid>,
    pub default_appearance: String,
    pub default_theme_light: Option<String>,
    pub theme_light_overrides: Option<Json>,
    pub default_theme_dark: Option<String>,
    pub theme_dark_overrides: Option<Json>,
    pub report_error_url: Option<String>,
    pub report_bug_url: Option<String>,
    pub report_feature_url: Option<String>,
    pub public_registration: bool,
    pub public_registration_verify_email: bool,
    pub public_registration_role: Option<Uuid>,
    pub public_registration_email_filter: Option<Json>,
}

impl From<Row> for directus_settings {
    fn from(row: Row) -> Self {
        Self {
            id: row.get("id"),
            project_name: row.get("project_name"),
            project_url: row.get("project_url"),
            project_color: row.get("project_color"),
            project_logo: row.get("project_logo"),
            public_foreground: row.get("public_foreground"),
            public_background: row.get("public_background"),
            public_note: row.get("public_note"),
            auth_login_attempts: row.get("auth_login_attempts"),
            auth_password_policy: row.get("auth_password_policy"),
            storage_asset_transform: row.get("storage_asset_transform"),
            storage_asset_presets: row.get("storage_asset_presets"),
            custom_css: row.get("custom_css"),
            storage_default_folder: row.get("storage_default_folder"),
            basemaps: row.get("basemaps"),
            mapbox_key: row.get("mapbox_key"),
            module_bar: row.get("module_bar"),
            project_descriptor: row.get("project_descriptor"),
            default_language: row.get("default_language"),
            custom_aspect_ratios: row.get("custom_aspect_ratios"),
            public_favicon: row.get("public_favicon"),
            default_appearance: row.get("default_appearance"),
            default_theme_light: row.get("default_theme_light"),
            theme_light_overrides: row.get("theme_light_overrides"),
            default_theme_dark: row.get("default_theme_dark"),
            theme_dark_overrides: row.get("theme_dark_overrides"),
            report_error_url: row.get("report_error_url"),
            report_bug_url: row.get("report_bug_url"),
            report_feature_url: row.get("report_feature_url"),
            public_registration: row.get("public_registration"),
            public_registration_verify_email: row.get("public_registration_verify_email"),
            public_registration_role: row.get("public_registration_role"),
            public_registration_email_filter: row.get("public_registration_email_filter"),
        }
    }
}
